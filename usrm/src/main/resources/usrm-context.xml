<beans:beans xmlns="http://www.springframework.org/schema/security"
             xmlns:beans="http://www.springframework.org/schema/beans"
             xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
             xmlns:context="http://www.springframework.org/schema/context"
             xmlns:jpa="http://www.springframework.org/schema/data/jpa"
             xsi:schemaLocation="http://www.springframework.org/schema/beans
	http://www.springframework.org/schema/beans/spring-beans.xsd
	http://www.springframework.org/schema/security
	http://www.springframework.org/schema/security/spring-security.xsd http://www.springframework.org/schema/context http://www.springframework.org/schema/context/spring-context.xsd http://www.springframework.org/schema/data/jpa http://www.springframework.org/schema/data/jpa/spring-jpa.xsd">

    <!--for reference to data source-->
    <beans:import resource="classpath:braces-core-context.xml"/>

    <!-- Component scan -->
    <context:component-scan base-package="usrm.service"/>

    <jpa:repositories base-package="usrm.repository" transaction-manager-ref="transactionManager"/>

    <!--configuration for spring security-->
    <!-- enable use-expressions -->
    <http auto-config="true" use-expressions="true" disable-url-rewriting="true"
          entry-point-ref="authenticationEntryPoint">

        <!--<intercept-url pattern="/admin**" access="hasRole('ROLE_USER')" />-->
        <!--allow login form for all-->
        <intercept-url pattern="/user/login" access="permitAll"/>

        <intercept-url pattern="/user/**" access="hasRole('ROLE_ADMIN')"/>
        <form-login
                login-page="/user/login"
                default-target-url="/"
                authentication-failure-url="/user/login?error"
                username-parameter="login"
                password-parameter="password"/>
        <logout logout-success-url="/user/login?logout" logout-url="/logout"/>
    </http>

    <authentication-manager>
        <authentication-provider>
            <password-encoder hash="bcrypt"/>
            <jdbc-user-service data-source-ref="dataSource"
                               users-by-username-query=
                                       "select login, password, TRUE from user where login=?"
                               authorities-by-username-query=
                                       "select login, role from user where login =?"/>
        </authentication-provider>
    </authentication-manager>

    <!--if the user has no rights, then always 403 error-->
    <beans:bean id="authenticationEntryPoint"
                class="org.springframework.security.web.authentication.Http403ForbiddenEntryPoint"/>

    <beans:bean id="webexpressionHandler"
                class="org.springframework.security.web.access.expression.DefaultWebSecurityExpressionHandler"/>

    <beans:bean id="accessDeniedHandler"
                class="org.springframework.security.web.access.AccessDeniedHandlerImpl">
        <beans:property name="errorPage" value="/accessDenied.do"/>
    </beans:bean>

</beans:beans>

